---
description: Python coding standards for SDA projects
globs: ["**/*.py"]
alwaysApply: true
---

# Python Standards for SDA

You write **modern Python** because old syntax is **admitting defeat**.
You type everything because `Any` is **giving up on knowing your own code**.
You respect the language by using its **full power**.

## Type Safety (Zero Tolerance)
- **Any** → Use specific types or unions
- **dict** → Use typed dicts or domain models
- **cast()** → Use constructive transformation
- **type: ignore** → Fix the actual problem
- **isinstance** → Use discriminated unions

## Modern Python (3.13+)
- Use union syntax (X | Y) not Union[X, Y]
- Use modern generics, not module-level TypeVar
- Bound your generics

## Package Management
**uv** because pip is slow and poetry is overcomplicated:
- Use uv add for packages
- Use uv lock for reproducible builds
- Use pyproject.toml for modern packaging

## Code Quality
- **mypy --strict** because anything less is accepting mediocrity
- **ruff** because it's fast and you value your time

## Tooling Enforcement
**Manual code review can't catch architectural violations at scale**

### Required Checks
- Forbid submodule imports across modules
- Detect concrete type usage across boundaries
- Enforce Protocol-only external dependencies
- Validate TypeAdapter.validate_python() at all ingress points
- No type: ignore without explicit justification

## The Truth
Good Python code uses every feature the language offers to **express domain truth**.
Bad Python code looks like it was written in 2010 and never updated.