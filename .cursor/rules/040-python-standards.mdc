---
description: Python coding standards for SDA projects
globs: ["**/*.py"]
alwaysApply: false
---

# Python Standards for SDA

## Type Safety (Non-Negotiable)
- `Any` is BANNED - use discriminated unions
- `getattr` with Pydantic models is BANNED
- Use `from typing import TYPE_CHECKING` for type-only imports
- Use discriminated unions instead of `Optional` - ALWAYS prefer type intelligence
- **Constructive types over casts** - Unpack and explicitly type (see 001-constructive-types)
- **Type ignore is LAST RESORT** - Only when constructive transformation truly impossible
- **Never weaken types to satisfy MyPy** - Keep domain models strongly typed

## Package Management
- Use `uv add` for adding packages
- Use `uv add --dev` for development dependencies
- Pydantic v2+ required

## Code Quality Tools
- `ruff -v` for linting issues
- `mypy --strict` for type checking
- Both must pass before committing

## SDA-Specific Standards
- All models frozen by default
- Use protocols as interface contracts
- Generic dicts and Any types are BANNED
- Value objects over primitive obsession
- **StrEnum over string literals** - Never use bare strings for domain concepts
